syntax = "proto3";
package grpc.solo.io;
option go_package = "github.com/solo-io/service-mesh-hub/services/mesh-apiserver/pkg/api/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "service-mesh-hub/api/discovery/v1alpha1/mesh.proto";
import "service-mesh-hub/api/core/v1alpha1/ref.proto";


message Mesh {
    discovery.zephyr.solo.io.MeshSpec spec = 1;
    // reserved for status
    reserved 2;
    core.zephyr.solo.io.ResourceRef ref = 3;
    map<string, string> labels = 4;
}

message ListMeshesRequest {
}

message ListMeshesResponse {
    repeated Mesh meshes = 1;

}

service MeshApi {
    rpc ListMeshes (ListMeshesRequest) returns (ListMeshesResponse) {}
}
